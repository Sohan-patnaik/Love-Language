{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\LlD_1\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { loveLanguageQuiz } from \"./data\";\nfunction App() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [ans, setAns] = useState({});\n  const [result, setResult] = useState(\"\");\n  function handleSelection(optionType) {\n    setAns(prev => ({\n      ...prev,\n      [index]: optionType\n    }));\n  }\n  function handleClick() {\n    if (!ans[index]) {\n      alert(\"Please select an answer before proceeding!\");\n      return;\n    }\n    if (index < loveLanguageQuiz.length - 1) {\n      setIndex(index + 1);\n    } else {\n      console.log(\"Final Answers:\", ans);\n      alert(\"Quiz completed! Check the console for your responses.\");\n      fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          answers: Object.values(ans)\n        })\n      }).then(res => res.json()).then(data => setResult(data.result)).catch(error => console.error(\"Error:\", error));\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, index + 1, \". \", loveLanguageQuiz[index].question), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, loveLanguageQuiz[index].options.map((option, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    onClick: () => handleSelection(option.type),\n    style: {\n      cursor: \"pointer\",\n      background: ans[index] === option.type ? \"#ddd\" : \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, option.text))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, index + 1, \" of \", loveLanguageQuiz.length, \" questions\"));\n}\n_s(App, \"r2XDuvqGvjSLVotOvJmjvNOVZCY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","loveLanguageQuiz","App","_s","index","setIndex","ans","setAns","result","setResult","handleSelection","optionType","prev","handleClick","alert","length","console","log","fetch","method","headers","body","JSON","stringify","answers","Object","values","then","res","json","data","catch","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","i","key","onClick","type","style","cursor","background","text","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/LlD_1/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { loveLanguageQuiz } from \"./data\";\r\n\r\nfunction App() {\r\n  const [index, setIndex] = useState(0);\r\n  const [ans, setAns] = useState({});\r\n  const [result,setResult] = useState(\"\");\r\n\r\n  function handleSelection(optionType) {\r\n    setAns((prev) => ({\r\n      ...prev,\r\n      [index]: optionType,\r\n    }));\r\n  }\r\n\r\n  function handleClick() {\r\n    if (!ans[index]) {\r\n      alert(\"Please select an answer before proceeding!\");\r\n      return;\r\n    }\r\n\r\n    if (index < loveLanguageQuiz.length - 1) {\r\n      setIndex(index + 1);\r\n    } else {\r\n      console.log(\"Final Answers:\", ans);\r\n      alert(\"Quiz completed! Check the console for your responses.\");\r\n      \r\n      fetch(\"http://localhost:5000/analyze\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ answers: Object.values(ans) }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => setResult(data.result))\r\n        .catch((error) => console.error(\"Error:\", error));\r\n    }\r\n   \r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n\r\n      <h2>\r\n        {index + 1}. {loveLanguageQuiz[index].question}\r\n      </h2>\r\n      <hr />\r\n      <ul>\r\n        {loveLanguageQuiz[index].options.map((option, i) => (\r\n          <li\r\n            key={i}\r\n            onClick={() => handleSelection(option.type)}\r\n            style={{\r\n              cursor: \"pointer\",\r\n              background: ans[index] === option.type ? \"#ddd\" : \"white\",\r\n            }}\r\n          >\r\n            {option.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleClick} type=\"submit\">\r\n        Next\r\n      </button>\r\n      <p>\r\n        {index + 1} of {loveLanguageQuiz.length} questions\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}